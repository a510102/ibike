{"version":3,"sources":["icon/bikeMark.svg","Header.js","SearchBike.js","BikeMap.js","BikeStep.js","BikeStepList.js","Pages.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","SearchBike","Filterdata","areas","useState","text","setText","onSubmit","event","preventDefault","className","onChange","value","target","map","area","i","key","bikeIcon","Icon","iconUrl","bikeMark","iconSize","BikeMap","Markstep","CAddress","Map","center","zoom","TileLayer","url","attribution","Marker","position","icon","Popup","BikeStep","data","Position","AvailableCNT","EmpCNT","isShow","setIsShow","Y","X","onClick","prevValue","BikeStepList","datas","ID","Pages","dataL","setPageD","pageD","pages","setPages","showpage","setShowpage","useEffect","pagesL","Math","ceil","newPages","push","filterpages","slice","style","display","page","Footer","year","Date","getFullYear","href","title","App","setDatas","filterdatas","setFilterdatas","setAreas","fetchData","a","fetch","mode","response","json","CArea","filter","element","index","arr","indexOf","setInterval","length","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.279bce87.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bikeMark.8ba5e95c.svg\";","import React from 'react'\n\nfunction Header() {\n    return (\n        <header>\n            <h1>\n                I-Bike\n            </h1>\n        </header>\n    )\n}\n\nexport default Header ","import React, { useState } from 'react'\n\nfunction SearchBike({ Filterdata, areas }) {\n    const [text, setText] = useState('');\n    function handleChange(event) {\n        const { value } = event.target\n        setText(value)\n    }\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        Filterdata(text);\n        setText('');\n    }\n    return (\n        <form onSubmit={handleSubmit} className=\"searchbike\">\n            <select onChange={handleChange} className=\"searchbike-select\">\n                <option>請選擇地區...</option>\n                {\n                    areas.map((area, i) => {\n                        return <option key={i} value={area}>{area}</option>\n                    })\n                }\n            </select>\n            <button className=\"searchbike-btn\">search</button>\n        </form>\n    )\n}\n\nexport default SearchBike;","import React from 'react'\nimport { Map, Marker, Popup, TileLayer } from 'react-leaflet';\nimport { Icon } from 'leaflet';\nimport bikeMark from './icon/bikeMark.svg';\nimport './bikeMap.css'\n\nconst bikeIcon = new Icon({\n    iconUrl: bikeMark,\n    iconSize: [50, 50],\n})\n\nfunction BikeMap({ Markstep, CAddress }) {\n    return (\n        <Map center={Markstep} zoom={18} className=\"map\">\n            <TileLayer\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\" />\n            <Marker position={Markstep} icon={bikeIcon} >\n                <Popup>\n                    {CAddress}\n                </Popup>\n            </Marker>\n            <button className=\"closemap\">X</button>\n        </Map>\n    )\n}\n\nexport default BikeMap;","import React, { useState } from 'react'\nimport BikeMap from './BikeMap';\n\nfunction BikeStep({ data }) {\n    const { Position, AvailableCNT, EmpCNT,\n        CAddress } = data;\n    const [isShow, setIsShow] = useState(false);\n    const Markstep = [data.Y, data.X];\n    function handleClick() {\n        setIsShow(prevValue => !prevValue);\n    }\n\n    return (\n        <div className=\"bikestep\">\n            <h3>站名:{Position} </h3>\n            <p>可用車輛:{AvailableCNT} / 剩餘空位:{EmpCNT} </p>\n            <button onClick={handleClick}>{isShow ? \"Close Map\" : \"Show Map\"}</button>\n            {isShow && <BikeMap Markstep={Markstep}\n                CAddress={CAddress} />}\n        </div>\n    )\n}\n\nexport default BikeStep;","import React from 'react'\nimport BikeStep from './BikeStep';\n\nfunction BikeStepList({ datas }) {\n    return (\n        <div className=\"bikestepList\">\n            {\n                datas.map(data => {\n                    return <BikeStep key={data.ID} data={data} />\n                })\n            }\n        </div>\n    )\n}\n\nexport default BikeStepList;","import React, { useState, useEffect } from 'react'\n\nfunction Pages({ dataL, setPageD, pageD }) {\n    const [pages, setPages] = useState([]);\n    const [showpage, setShowpage] = useState(1);\n    useEffect(() => {\n        let pagesL = Math.ceil(dataL / 10);\n        const newPages = [];\n        for (let i = 1; i <= pagesL; i++) {\n            newPages.push(i);\n        }\n        setPages(newPages);\n    }, [dataL])\n\n    function prevPage() {\n        setPageD(pageD - 1);\n        if (pageD === filterpages[0]) {\n            setShowpage(showpage - 1)\n        }\n    }\n    function nextPage() {\n        setPageD(pageD + 1);\n        if (pageD === filterpages.slice(-1)[0]) {\n            setShowpage(showpage + 1)\n        }\n    }\n\n    const filterpages = pages.slice(showpage * 10 - 10, showpage * 10);\n    return (\n        <ul className=\"pages\">\n            <li onClick={prevPage} style={{ display: filterpages[0] === pages[0] && \"none\" }}>{\"<\"}</li>\n            {\n                filterpages.map((page, i) => {\n                    return <li\n                        className={page === pageD ? \"active\" : null}\n                        key={i}\n                        onClick={() => setPageD(page)}>{page}</li>\n                })\n            }\n            <li onClick={nextPage} style={{ display: filterpages.slice(-1)[0] === pages.slice(-1)[0] && \"none\" }}> {\">\"}</li>\n        </ul>\n    )\n}\n\nexport default Pages","import React from 'react'\n\nfunction Footer() {\n    const year = new Date().getFullYear();\n    return (\n        <footer>\n            <p>cpoyright © {year}</p>\n            <div>Icons made by <a href=\"https://www.flaticon.com/authors/google\" title=\"Google\">Google</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div>\n        </footer>\n    )\n}\n\nexport default Footer\n\n","import React, { useState, useEffect } from 'react';\nimport Header from './Header';\nimport SearchBike from './SearchBike';\nimport BikeStepList from './BikeStepList'\nimport Pages from './Pages';\nimport Footer from './Footer';\n\nfunction App() {\n  const [datas, setDatas] = useState([]);\n  const [filterdatas, setFilterdatas] = useState([]);\n  const [areas, setAreas] = useState([]);\n  const [pageD, setPageD] = useState(1);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch('http://e-traffic.taichung.gov.tw/DataAPI/api/YoubikeAllAPI', { mode: \"cors\" });\n      const datas = await response.json();\n      let areas = datas.map(data => data.CArea);\n      areas = areas.filter((element, index, arr) => arr.indexOf(element) === index);\n      setDatas(datas);\n      setAreas(areas);\n    }\n    fetchData();\n    //每分鐘更新一次\n    setInterval(fetchData, 60000)\n  }, []);\n\n\n  function Filterdata(area) {\n    if (area) {\n      const filterdatas = datas.filter(data => data.CArea === area);\n      setFilterdatas(filterdatas)\n      setPageD(1);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <SearchBike Filterdata={Filterdata} areas={areas} />\n      <BikeStepList datas={filterdatas.length > 0 ? filterdatas.slice(pageD * 10 - 10, pageD * 10) : datas.slice(pageD * 10 - 10, pageD * 10)} />\n      <Pages\n        dataL={filterdatas.length > 0 ? filterdatas.length : datas.length}\n        setPageD={setPageD}\n        pageD={pageD}\n      />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './style.scss/style.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}